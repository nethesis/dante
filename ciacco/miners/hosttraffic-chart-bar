#!/usr/bin/perl

#
# Copyright (C) 2019 Nethesis S.r.l.
# http://www.nethesis.it - info@nethesis.it
#
# This script is part of Dante.
#
# Dante is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# Dante is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Dante.  If not, see COPYING.
#

use strict;
use warnings;
use JSON;
use File::Basename;

my $api = 'http://127.0.0.1:3000/lua/rest/v1/get/host/custom_data.lua?ifid=view:all&field_alias=ip,names,local_network_id,bytes.sent,bytes.rcvd';
my $limit = 10;
my @hosts;
my @categories;
my @sent;
my @received;
my $i = 0;

my $content = decode_json(`/usr/bin/curl -s -H 'Content-Type: application/json' '$api'`);

if (!$content) {
    exit 1;
}

foreach my $host (@{$content->{'rsp'}}) {
    next if not exists $host->{'local_network_id'};
    push(@hosts, {"host" => $host->{'ip'}, "sent" => int($host->{'bytes.sent'}), "rcvd" => int($host->{'bytes.rcvd'}), "tot" => int($host->{'bytes.sent'}) + int($host->{'bytes.rcvd'})});
}

@hosts = sort { $a->{"tot"} <=> $b->{"tot"}; } @hosts;

foreach (reverse @hosts) {
    last if ($i >= $limit);
    push(@categories, $_->{"host"});
    push(@sent, $_->{'sent'});
    push(@received, $_->{'rcvd'});
    $i++;
}

print encode_json({
        minerId => basename($0),
        type => "chart",
        chartType => "bar",
        aggregationType => "snapshot",
        categories => \@categories,
        anonymizable => JSON::true,
	    unit => "bytes",
        series => [ { name => "sent", data => \@sent }, { name => "received", data => \@received }]
    });
